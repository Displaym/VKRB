using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.IO;

namespace DBSN
{
    public class ClDBSN
    {
        static string _way;
        static string _fil_dbn;
        static string _fil_dbs;
        public FileStream _dbs;
        public FileStream _dbn;
        public ClDBSN(string way)
        {
            _way = way;
        }

        //public void append_to_file()
        //{
        //    Console.WriteLine("Какой файл дозаписать:");
        //    string fil_name = Console.ReadLine();
        //    fil_name = _way + fil_name;
        //    using (StreamWriter sw = new StreamWriter(fil_name, true, System.Text.Encoding.Default))
        //    {

        //    }
        //}
        //СОЗДАНИЕ ТАБЛИЦЫ ДБСН//
        public void createDBSN()
        {
            //var dbs = File.CreateText(_way + name + ".dbs", true);
            //var dbn = File.CreateText(_way + name + ".dbn", true);
            //dbs.Close();
            //dbn.Close();
            Console.WriteLine("Введите имя файла:");
            string name = Console.ReadLine();
            using (StreamWriter sw = new StreamWriter(_way + name + ".dbs", true))
            {
                Console.WriteLine("Файл " + name + ".dbs" + " создан или открыт(в случае ошибочного использования)");
            }
            using (StreamWriter sw = new StreamWriter(_way + name + ".dbn", true))
            {
                Console.WriteLine("Файл " + name + ".dbn" + " создан или открыт(в случае ошибочного использования)");
            }
        }

        //ОТКРЫТЬ ТАБЛИЦУ ДБСН//
        public void openDBSN()
        {
            Console.WriteLine("Какой файл открыть:");
            string fil_name = Console.ReadLine();
            fil_name = _way + fil_name;
            _dbs = File.Open(fil_name + ".dbs", FileMode.Append);
            Console.WriteLine("Файл " + fil_name + ".dbs" + " открыт");
            _dbn = File.Open(fil_name + ".dbn", FileMode.Append);
            Console.WriteLine("Файл " + fil_name + ".dbn" + " открыт");
        }

        //ЗАКРЫТЬ ТАБЛИЦУ ДБСН//
        public void closeDBSN()
        {
            _dbn.Close();
            _dbs.Close();
        }

        //ЗАПИСЬ В ТАБЛИЦУ ДБСН//
        public void writeDBSN(string fragm)
        {
            Console.WriteLine("Какой файл дозаписать:");
            string fil_name = Console.ReadLine();
            fil_name = _way + fil_name;
            int file_text_lenght;
            using (StreamReader sr = new StreamReader(fil_name + ".dbs"))
            {
                string file_text = sr.ReadToEnd();
                file_text_lenght = file_text.Length;
            }
            using (StreamWriter sw = new StreamWriter(fil_name + ".dbs", true, System.Text.Encoding.Default))
            {
                sw.Write(fragm);
                Console.WriteLine("Файл " + fil_name + ".dbs" + " дозаписан");
            }
            //using (StreamWriter sw = new StreamWriter(fil_name + ".dbn", true, System.Text.Encoding.Default))
            //{
            //    string BinaryFragm_nom = Convert.ToString(fragm_nom_int, 2);
            //    string BinaryFragm_len = Convert.ToString(fragm.Length, 2);
            //    sw.WriteLine(BinaryFragm_nom + BinaryFragm_len);
            //    Console.WriteLine("Файл " + fil_name + ".dbn" + " дозаписан");
            //}
            //using (var fs = File.OpenWrite(fil_name + ".dbn"))
            //{
            //    using (var bw = new BinaryWriter(fs))
            //    {
            //        bw.Write(fragm_nom_int);
            //        bw.Write(fragm.Length);
            //        Console.WriteLine("Файл " + fil_name + ".dbn" + " дозаписан");
            //    }
            //}
            using (FileStream fs = new FileStream(fil_name + ".dbn", FileMode.Append))
            {
                byte[] array = BitConverter.GetBytes(file_text_lenght);
                fs.Write(array, 0, array.Length);
                byte[] array_2 = BitConverter.GetBytes(fragm.Length);
                fs.Write(array_2, 0, array_2.Length);
                Console.WriteLine("Файл " + fil_name + ".dbn" + " дозаписан");
            }
        }

        //ЧТЕНИЕ ИЗ ТАБЛИЦЫ ДБСН//
        public void readDBSN(int fragm_num)
        {
            Console.WriteLine("Какой файл прочитать:");
            string fil_name = Console.ReadLine();
            fil_name = _way + fil_name;
            int fragm_begin;
            int fragm_end;
            using (FileStream fs = File.OpenRead(fil_name + ".dbn"))
            {
                fs.Seek((8 * (fragm_num - 1)), 0);
                byte[] array = new byte[4];
                fs.Read(array, 0, array.Length);
                fragm_begin = BitConverter.ToInt32(array, 0);
                fs.Read(array, 0, array.Length);
                fragm_end = BitConverter.ToInt32(array, 0);
            }
            using (FileStream fs = File.OpenRead(fil_name + ".dbs"))
            {
                fs.Seek(fragm_begin, 0);
                byte[] array = new byte[fragm_end];
                fs.Read(array, 0, array.Length);
                string text_fragm = Encoding.Default.GetString(array);
                Console.WriteLine($"Вы читаете {fragm_num} фрагмент из " + fil_name + ".dbs" + " : " + text_fragm);
            }
        }

        //ЧТЕНИЕ В РЕАЛЬНОМ ВРЕМЕНИ//
        //СМОТРЯЩИЙ ЗА ФАЙЛОМ//
        //public void realtime_readDBSN()
        //{
        //    do
        //    {
        //        FileSystemWatcher watcher = new FileSystemWatcher();
        //        watcher.Path = Path.GetDirectoryName(@"" + _way + _fil_dbn);
        //        watcher.NotifyFilter = NotifyFilters.Size;
        //        watcher.Filter = "*.dbn";

        //        watcher.Changed += new FileSystemEventHandler(OnChanged);

        //        watcher.EnableRaisingEvents = true;
        //    }
        //    while (Console.Read() != 'q');
        //}

        ////ОБРАБОТЧИК ИЗМЕНЕНИЙ В ФАЙЛЕ//
        //public void OnChanged(object sender, FileSystemEventArgs e)
        //{
        //    Console.WriteLine("File: {0} {1}", e.FullPath, e.ChangeType.ToString());
        //}
    }
}
